#!/usr/bin/env node
"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var chalk_1=__importDefault(require("chalk")),find_up_1=__importDefault(require("find-up")),fs_1=__importDefault(require("fs")),globby_1=__importDefault(require("globby")),yargs_1=__importDefault(require("yargs")),pkg=require("../package.json"),configPath=find_up_1.default.sync([".file-linter",".file-linter.json","file-linter","file-linter.json"]),config=configPath?JSON.parse(fs_1.default.readFileSync(configPath).toString("utf8")):{},displayTotalAssersionResults=function(e){var t=0,o=0,s=0;e.filter(function(e){e.results.map(function(e){var r=e.passed;t++,!0===r?o++:s++})}),console.log(chalk_1.default.green.bold("\nPassed: ("+o+"/"+t+")")),0<s&&(console.log(chalk_1.default.red.bold("Failed: ("+s+"/"+t+")")),process.exit(1)),process.exit(0)};yargs_1.default.option("recursive",{alias:"r",type:"boolean",describe:"Recursively search for files",default:!1}).pkgConf("file-linter").config(config).command("$0",pkg.description,{},function(e){var r=e.regex,t=e.recursive;if("object"!=typeof r)throw new TypeError("Regex values must be of type object");var o=Object.keys(r).map(function(e){var s=r[e];if("string"!=typeof(s&&e))throw new TypeError("regexAssersion and dirName values must be of type string");return{dirName:e,results:globby_1.default.sync([e],{deep:!!t}).map(function(e){var r=e.split("/"),t=r[r.length-1],o=new RegExp(s).test(t);return{fileName:t,regexAssersion:s,passed:o}})}});console.log(chalk_1.default.green(pkg.name+" [v"+pkg.version+"]:\n")),o.forEach(function(e){var r=e.dirName,t=e.results;console.log(chalk_1.default.yellow("  "+r+"/")),t.forEach(function(e){var r=e.fileName,t=e.regexAssersion,o=e.passed;console.log(o?chalk_1.default.green("    "+r+" ✓"):chalk_1.default.red("    "+r+" ✗ ("+t+")"))})}),displayTotalAssersionResults(o)}).argv;